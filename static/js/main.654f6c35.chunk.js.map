{"version":3,"sources":["component/Language/languageOption.js","component/TranslateLanguage/TransLanguage.js","component/LanguageSelector/LanguageSelector.js","component/Header/Header.js","component/Main/Main.js","component/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["dictionaryList","en","vi","languageOptions","LanguageContext","createContext","userLanguage","dictionary","LanguageProvider","children","useState","setUserLanguage","provider","userLanguageChange","selected","newLanguage","window","localStorage","setItem","Provider","value","Text","key","path","text","newpath","split","current","i","length","undefined","pathText","useContext","LanguageSelector","useEffect","defaultLanguage","getItem","navigator","language","substring","onChange","e","target","Object","entries","map","id","name","Header","Container","Navbar","Brand","href","alt","src","width","height","className","Nav","Link","Body","Footer","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.654f6c35.chunk.js","sourcesContent":["import vi from './vi.json';\r\nimport en from './en.json';\r\n\r\nexport const dictionaryList={en, vi};\r\n\r\nexport const languageOptions={\r\n    en: 'English',\r\n    vi: 'Vietnamese'\r\n};","import React, { createContext, useContext, useState } from \"react\";\r\n\r\nimport { languageOptions, dictionaryList } from \"../Language/languageOption\";\r\n\r\nexport const LanguageContext = createContext({\r\n  userLanguage: \"en\",\r\n  dictionary: dictionaryList.en,\r\n});\r\n\r\nexport function LanguageProvider({ children }) {\r\n  const [userLanguage, setUserLanguage] = useState(\"en\");\r\n\r\n  const provider = {\r\n    userLanguage,\r\n    dictionary: dictionaryList[userLanguage],\r\n    userLanguageChange: (selected) => {\r\n      const newLanguage = languageOptions[selected] ? selected : \"en\";\r\n      setUserLanguage(newLanguage);\r\n      window.localStorage.setItem(\"language-now\", newLanguage);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={provider}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n}\r\n\r\nexport function pathText(path, text) {\r\n  let newpath = path.split(\".\");\r\n  let current = text;\r\n  for (let i = 0; i < newpath.length; i++) {\r\n    if(current[newpath[i]]!==undefined){\r\n      current=current[newpath[i]]\r\n    } else{\r\n      return undefined;\r\n    }\r\n  }\r\n  return current;\r\n}\r\n\r\nexport function Text(key) {\r\n  const languageContext = useContext(LanguageContext);\r\n  return pathText(key, languageContext.dictionary);\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { LanguageContext } from '../TranslateLanguage/TransLanguage'\r\nimport { languageOptions } from '../Language/languageOption';\r\n\r\n\r\nexport default function LanguageSelector(){\r\n    const {userLanguage, userLanguageChange}=useContext(LanguageContext);\r\n\r\n    const handleLanguageChange=e=>userLanguageChange(e.target.value);\r\n    \r\n    useEffect(()=>{\r\n        let defaultLanguage=window.localStorage.getItem('language-now');\r\n        if(!defaultLanguage){\r\n            defaultLanguage=window.navigator.language.substring(0,2);\r\n        }\r\n        userLanguageChange(defaultLanguage);\r\n    }, [userLanguageChange]);\r\n\r\n    return(\r\n        <select onChange={handleLanguageChange} value={userLanguage} >\r\n            {Object.entries(languageOptions).map(([id, name])=>(\r\n                <option key={id} value={id}>{name}</option>\r\n            ))}\r\n        </select>\r\n    )\r\n}","import React from \"react\";\r\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\r\nimport {Text} from '../TranslateLanguage/TransLanguage';\r\n\r\nimport \"./Header.css\";\r\nimport LanguageSelector from \"../LanguageSelector/LanguageSelector\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Container>\r\n      <Navbar>\r\n        <Navbar.Brand href=\"#\">\r\n          <img\r\n            alt=\"\"\r\n            src=\"https://www.tma-innovation.center/image/logo.svg\"\r\n            width=\"150px\"\r\n            height=\"100%\"\r\n            className=\"d-inline-block align-top\"\r\n          />{\" \"}\r\n        </Navbar.Brand>\r\n        <Nav className=\"top-menu\">\r\n          <Nav.Link>{Text(\"header.header1\")}</Nav.Link>\r\n          <Nav.Link>{Text(\"header.header2\")}</Nav.Link>\r\n          <Nav.Link>{Text(\"header.header3\")}</Nav.Link>\r\n          <Nav.Link>{Text(\"header.header4\")}</Nav.Link>\r\n          <Nav.Link>{Text(\"header.header5\")}</Nav.Link>\r\n          <Nav.Link>{Text(\"header.header6\")}</Nav.Link>\r\n          <Nav.Link>{Text(\"header.header7\")}</Nav.Link>\r\n          <Nav.Link>{Text(\"header.header8.test\")}</Nav.Link>\r\n          <LanguageSelector/>\r\n        </Nav>\r\n      </Navbar>\r\n    </Container>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../Main/Main.css\";\r\nimport { Text } from \"../TranslateLanguage/TransLanguage\";\r\n\r\nconst Body = () => {\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"container\">\r\n        <div className=\"main-title\">\r\n          <h1 className=\"title\">{Text(\"main.title\")}</h1>\r\n        </div>\r\n        <div className=\"top-row element-row\">\r\n          <div className=\"image\">\r\n            <img src=\"https://www.tma-innovation.center/image/e-1.png\" />\r\n          </div>\r\n          <div className=\"text\">\r\n            <p>{Text(\"main.textone\")}</p>\r\n            <ul>\r\n              <li>{Text(\"main.infor1\")}</li>\r\n              <li>{Text(\"main.infor2\")}</li>\r\n              <li>{Text(\"main.infor3\")}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"middle-row\">\r\n          <div className=\"text\">\r\n            <p>\r\n              <strong>{Text(\"main.titletext1\")}</strong>\r\n            </p>\r\n            <ul>\r\n              <li>{Text(\"main.infor4\")}</li>\r\n              <li>{Text(\"main.infor5\")}</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"image\">\r\n            <img src=\"https://www.tma-innovation.center/image/e-2.png\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"third-row element-row\">\r\n          <div className=\"image\">\r\n            <img src=\"https://www.tma-innovation.center/image/e-5.png\" />\r\n          </div>\r\n          <div className=\"text\">\r\n            <p>\r\n              <strong>{Text(\"main.titletext2\")}</strong>\r\n            </p>\r\n            <ul>\r\n              <li>{Text(\"main.infor7\")}</li>\r\n              <li>{Text(\"main.infor8\")}</li>\r\n              <li>{Text(\"main.infor9\")}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"logo\">\r\n            <img\r\n              alt=\"\"\r\n              src=\"https://www.tma-innovation.center/image/logo.svg\"\r\n            />{\" \"}\r\n          </div>\r\n          <div className=\"information\">\r\n            <div className=\"col1\">\r\n              <div className=\"col1-detail\">\r\n                <div className=\"title1\">\r\n                  <strong>Address</strong>\r\n                </div>\r\n                <div className=\"detail1\">\r\n                  TMA Building, Street #10, Quang Trung Software City, 1 To Ky,\r\n                  District 12, Ho Chi Minh City, Vietnam\r\n                </div>\r\n              </div>\r\n              <div className=\"col1-detail-2\">\r\n                <div className=\"title2\">\r\n                  <strong>Email</strong>\r\n                </div>\r\n                <div className=\"detail2\">contact@tma-innovation.center</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col2\">\r\n              <div className=\"title\">\r\n                <strong>Phone</strong>\r\n              </div>\r\n              <div className=\"detail3\">\r\n                <p>\r\n                  <strong>TMA Vietnam</strong>\r\n                  +84 2839 951 059\r\n                </p>\r\n                <p>\r\n                  <strong>TMA North America</strong>\r\n                  +84 2839 951 059\r\n                </p>\r\n                <p>\r\n                  <strong>TMA Vietnam</strong>\r\n                  +84 2839 951 059\r\n                </p>\r\n                <p>\r\n                  <strong>TMA Vietnam</strong>\r\n                  +84 2839 951 059\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Header from \"./component/Header/Header\";\r\nimport Body from \"./component/Main/Main\";\r\nimport Footer from \"./component/Footer/Footer\";\r\nimport {LanguageProvider} from \"./component/TranslateLanguage/TransLanguage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <LanguageProvider>\r\n      <div className=\"App\">\r\n          <Header/>\r\n          <Body/>\r\n          <Footer/>\r\n      </div>\r\n    </LanguageProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}